#include "issue.h"

Issue::Issue(QObject *parent) : IBase(parent) { model = new IssueModel(this); }

void Issue::sltReplyFinished(QNetworkReply *reply) {

  if (reply->error() != QNetworkReply::NoError) {
    if (reply->error() == QNetworkReply::AuthenticationRequiredError) {
      qDebug() << "AuthenticationRequiredError";
      Q_EMIT sigReplyError(ConnectionError_Authentication);
    }
  } else {
    parse(reply->readAll());
  }
}
void Issue::parse(QByteArray xml) {

  QDomDocument doc;
  doc.setContent(xml, false);

  QDomNodeList issues = doc.elementsByTagName("issue");
  for (int i = 0; i < issues.size(); i++) {
    QDomNode n = issues.item(i);
    QDomElement id = n.firstChildElement("id");
    QDomElement project = n.firstChildElement("project");
    QDomElement tracker = n.firstChildElement("tracker");
    if (id.isNull() || project.isNull() || tracker.isNull())
      continue;
    model->insertRow(   )
  }
}
